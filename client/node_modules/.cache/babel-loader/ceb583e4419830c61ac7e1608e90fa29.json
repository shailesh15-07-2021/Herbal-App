{"ast":null,"code":"import axios from \"axios\";\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from \"../Constant/CartConstant\"; // Add to cart Action\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`http://localhost:5000/product/findOne/${id}`);\n  console.log(data);\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n}; // Remove From Cart Action\n\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n}; // Save Shipping Address Action\n\nexport const saveShippingAddress = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n}; // Payment Action\n\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\n};","map":{"version":3,"sources":["/home/master/Documents/herbalFinal/client/src/Redux/Action/CartAction.js"],"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_PAYMENT_METHOD","CART_SAVE_SHIPPING_ADDRESS","addToCart","id","qty","dispatch","getState","data","get","console","log","type","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","saveShippingAddress","savePaymentMethod"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,gBAFF,EAGEC,wBAHF,EAIEC,0BAJF,QAKO,0BALP,C,CAOA;;AACA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,GAAL,KAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClE,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMV,KAAK,CAACW,GAAN,CACpB,yCAAwCL,EAAG,EADvB,CAAvB;AAGAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAF,EAAAA,QAAQ,CAAC;AACPM,IAAAA,IAAI,EAAEb,aADC;AAEPc,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAEN,IAAI,CAACO,GADP;AAEPC,MAAAA,IAAI,EAAER,IAAI,CAACQ,IAFJ;AAGPC,MAAAA,KAAK,EAAET,IAAI,CAACS,KAHL;AAIPC,MAAAA,KAAK,EAAEV,IAAI,CAACU,KAJL;AAKPC,MAAAA,YAAY,EAAEX,IAAI,CAACW,YALZ;AAMPd,MAAAA;AANO;AAFF,GAAD,CAAR;AAYAe,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAehB,QAAQ,GAAGiB,IAAX,CAAgBC,SAA/B,CAAlC;AACD,CAlBM,C,CAoBP;;AACA,OAAO,MAAMC,cAAc,GAAItB,EAAD,IAAQ,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC5DD,EAAAA,QAAQ,CAAC;AACPM,IAAAA,IAAI,EAAEZ,gBADC;AAEPa,IAAAA,OAAO,EAAET;AAFF,GAAD,CAAR;AAKAgB,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAehB,QAAQ,GAAGiB,IAAX,CAAgBC,SAA/B,CAAlC;AACD,CAPM,C,CASP;;AACA,OAAO,MAAME,mBAAmB,GAAInB,IAAD,IAAWF,QAAD,IAAc;AACzDA,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAEV,0BAAR;AAAoCW,IAAAA,OAAO,EAAEL;AAA7C,GAAD,CAAR;AAEAY,EAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAef,IAAf,CAAxC;AACD,CAJM,C,CAMP;;AACA,OAAO,MAAMoB,iBAAiB,GAAIpB,IAAD,IAAWF,QAAD,IAAc;AACvDA,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAEX,wBAAR;AAAkCY,IAAAA,OAAO,EAAEL;AAA3C,GAAD,CAAR;AAEAY,EAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAef,IAAf,CAAtC;AACD,CAJM","sourcesContent":["import axios from \"axios\";\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_SAVE_SHIPPING_ADDRESS,\n} from \"../Constant/CartConstant\";\n\n// Add to cart Action\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(\n    `http://localhost:5000/product/findOne/${id}`\n  );\n  console.log(data);\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\n// Remove From Cart Action\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\n// Save Shipping Address Action\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_SHIPPING_ADDRESS, payload: data });\n\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n};\n\n// Payment Action\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_PAYMENT_METHOD, payload: data });\n\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\n};\n"]},"metadata":{},"sourceType":"module"}