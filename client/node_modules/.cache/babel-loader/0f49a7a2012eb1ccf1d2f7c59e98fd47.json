{"ast":null,"code":"import axios from \"axios\";\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_CANCEL_FAIL, ORDER_CANCEL_SUCCESS, ORDER_CANCEL_REQUEST } from \"../Constant/OrderConstant\";\nexport const createOrder = order => async dispatch => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n      payload: order\n    });\n    const token = localStorage.getItem(\"etoken\");\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"token\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"http://localhost:5000/order/create\", order, config); // console.log(data);\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const token = localStorage.getItem(\"etoken\");\n    console.log(`Bearer ${token}`);\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://localhost:5000/order/find-order-by-id/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async dispatch => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const token = localStorage.getItem(\"etoken\");\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`http://localhost:5000/order/update-payment/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = userResult => async dispatch => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n      payload: userResult\n    });\n    const token = localStorage.getItem(\"etoken\");\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"token\"\n      }\n    };\n    const data = await axios.post(\"http://localhost:5000/order/find\", userResult, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data.data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const cancelOrder = id => async dispatch => {\n  try {\n    dispatch({\n      type: ORDER_CANCEL_REQUEST,\n      payload: id\n    });\n    const token = localStorage.getItem(\"etoken\");\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"token\"\n      }\n    };\n    const data = await axios.post(`http://localhost:5000/order/delete/${id}`, id, config);\n    dispatch({\n      type: ORDER_CANCEL_SUCCESS,\n      payload: data.data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CANCEL_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/master/Documents/herbalFinal/client/src/Redux/Action/OrderAction.js"],"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_CANCEL_FAIL","ORDER_CANCEL_SUCCESS","ORDER_CANCEL_REQUEST","createOrder","order","dispatch","type","payload","token","localStorage","getItem","config","headers","Authorization","data","post","error","response","message","getOrderDetails","id","getState","console","log","get","payOrder","orderId","paymentResult","put","listMyOrders","userResult","orders","cancelOrder"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,iBAHF,EAIEC,qBAJF,EAKEC,qBALF,EAMEC,kBANF,EAOEC,iBAPF,EAQEC,iBARF,EASEC,cATF,EAUEC,qBAVF,EAWEC,qBAXF,EAYEC,kBAZF,EAaEC,iBAbF,EAcEC,oBAdF,EAeEC,oBAfF,QAgBO,2BAhBP;AAkBA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,MAAOC,QAAP,IAAoB;AACxD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAElB,oBADC;AAEPmB,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAKA,UAAMI,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAd;AACA,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAE;AAFR;AADI,KAAf;AAOA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAM3B,KAAK,CAAC4B,IAAN,CACrB,oCADqB,EAErBX,KAFqB,EAGrBO,MAHqB,CAAvB,CAdE,CAmBF;;AACAN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEjB,oBADC;AAEPkB,MAAAA,OAAO,EAAEO;AAFF,KAAD,CAAR;AAID,GAxBD,CAwBE,OAAOE,KAAP,EAAc;AACdX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEhB,iBADC;AAEPiB,MAAAA,OAAO,EACLS,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAlCM;AAoCP,OAAO,MAAMC,eAAe,GAAIC,EAAD,IAAQ,OAAOf,QAAP,EAAiBgB,QAAjB,KAA8B;AACnE,MAAI;AACFhB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEf;AADC,KAAD,CAAR;AAIA,UAAMiB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAd;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAa,UAASf,KAAM,EAA5B;AAEA,UAAMG,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASL,KAAM;AADxB;AADI,KAAf;AAMA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAM3B,KAAK,CAACqC,GAAN,CACpB,gDAA+CJ,EAAG,EAD9B,EAErBT,MAFqB,CAAvB;AAIAN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEd,qBADC;AAEPe,MAAAA,OAAO,EAAEO;AAFF,KAAD,CAAR;AAID,GAtBD,CAsBE,OAAOE,KAAP,EAAc;AACdX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEb,kBADC;AAEPc,MAAAA,OAAO,EACLS,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAhCM;AAkCP,OAAO,MAAMO,QAAQ,GAAG,CAACC,OAAD,EAAUC,aAAV,KAA4B,MAAOtB,QAAP,IAAoB;AACtE,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEZ;AADC,KAAD,CAAR;AAIA,UAAMc,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAd;AACA,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASL,KAAM;AAFxB;AADI,KAAf;AAOA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAM3B,KAAK,CAACyC,GAAN,CACpB,8CAA6CF,OAAQ,MADjC,EAErBC,aAFqB,EAGrBhB,MAHqB,CAAvB;AAKAN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX,iBADC;AAEPY,MAAAA,OAAO,EAAEO;AAFF,KAAD,CAAR;AAID,GAtBD,CAsBE,OAAOE,KAAP,EAAc;AACdX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,cADC;AAEPW,MAAAA,OAAO,EACLS,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAhCM;AAkCP,OAAO,MAAMW,YAAY,GAAIC,UAAD,IAAgB,MAAOzB,QAAP,IAAoB;AAC9D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,qBADC;AAEPU,MAAAA,OAAO,EAAEuB;AAFF,KAAD,CAAR;AAKA,UAAMtB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAd;AACA,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAE;AAFR;AADI,KAAf;AAOA,UAAMC,IAAI,GAAG,MAAM3B,KAAK,CAAC4B,IAAN,CACjB,kCADiB,EAEjBe,UAFiB,EAGjBnB,MAHiB,CAAnB;AAKAN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,qBADC;AAEPS,MAAAA,OAAO,EAAEO,IAAI,CAACA,IAAL,CAAUiB;AAFZ,KAAD,CAAR;AAID,GAvBD,CAuBE,OAAOf,KAAP,EAAc;AACdX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,kBADC;AAEPQ,MAAAA,OAAO,EACLS,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAjCM;AAmCP,OAAO,MAAMc,WAAW,GAAIZ,EAAD,IAAQ,MAAOf,QAAP,IAAoB;AACrD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,oBADC;AAEPK,MAAAA,OAAO,EAAEa;AAFF,KAAD,CAAR;AAKA,UAAMZ,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAd;AACA,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAE;AAFR;AADI,KAAf;AAOA,UAAMC,IAAI,GAAG,MAAM3B,KAAK,CAAC4B,IAAN,CAChB,sCAAqCK,EAAG,EADxB,EAEjBA,EAFiB,EAGjBT,MAHiB,CAAnB;AAKAN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,oBADC;AAEPM,MAAAA,OAAO,EAAEO,IAAI,CAACA,IAAL,CAAUiB;AAFZ,KAAD,CAAR;AAID,GAvBD,CAuBE,OAAOf,KAAP,EAAc;AACdX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,iBADC;AAEPO,MAAAA,OAAO,EACLS,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAjCM","sourcesContent":["import axios from \"axios\";\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_CANCEL_FAIL,\n  ORDER_CANCEL_SUCCESS,\n  ORDER_CANCEL_REQUEST,\n} from \"../Constant/OrderConstant\";\n\nexport const createOrder = (order) => async (dispatch) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n      payload: order,\n    });\n\n    const token = localStorage.getItem(\"etoken\");\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"token\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"http://localhost:5000/order/create\",\n      order,\n      config\n    );\n    // console.log(data);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const token = localStorage.getItem(\"etoken\");\n    console.log(`Bearer ${token}`);\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.get(\n      `http://localhost:5000/order/find-order-by-id/${id}`,\n      config\n    );\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    });\n\n    const token = localStorage.getItem(\"etoken\");\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `http://localhost:5000/order/update-payment/${orderId}/pay`,\n      paymentResult,\n      config\n    );\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listMyOrders = (userResult) => async (dispatch) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n      payload: userResult,\n    });\n\n    const token = localStorage.getItem(\"etoken\");\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"token\",\n      },\n    };\n\n    const data = await axios.post(\n      \"http://localhost:5000/order/find\",\n      userResult,\n      config\n    );\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data.data.orders,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const cancelOrder = (id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: ORDER_CANCEL_REQUEST,\n      payload: id,\n    });\n\n    const token = localStorage.getItem(\"etoken\");\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"token\",\n      },\n    };\n\n    const data = await axios.post(\n      `http://localhost:5000/order/delete/${id}`,\n      id,\n      config\n    );\n    dispatch({\n      type: ORDER_CANCEL_SUCCESS,\n      payload: data.data.orders,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CANCEL_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}