{"ast":null,"code":"import axios from \"axios\";\nimport { CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS, CATEGORY_LIST_FAILS, CATEGORY_DETAILS_REQUEST, CATEGORY_DETAILS_SUCCESS, CATEGORY_DETAILS_FAILS } from \"../Constant/CategoryConstant\";\nexport const listCategories = () => async dispatch => {\n  try {\n    dispatch({\n      type: CATEGORY_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"http://localhost:5000/category/find\");\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_LIST_FAILS,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listCategoryDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: CATEGORY_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`http://localhost:5000/category/find/${id}`);\n    dispatch({\n      type: CATEGORY_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_DETAILS_FAILS,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/master/Documents/herbalFinal/client/src/Redux/Action/CategoryAction.js"],"names":["axios","CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_LIST_FAILS","CATEGORY_DETAILS_REQUEST","CATEGORY_DETAILS_SUCCESS","CATEGORY_DETAILS_FAILS","listCategories","dispatch","type","data","get","payload","error","response","message","listCategoryDetails","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,mBAHF,EAIEC,wBAJF,EAKEC,wBALF,EAMEC,sBANF,QAOO,8BAPP;AASA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACtD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AACA,UAAM;AAAES,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,GAAN,CAAU,qCAAV,CAAvB;AACAH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,qBADC;AAEPU,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GAPD,CAOE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,mBADC;AAEPS,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAjBM;AAmBP,OAAO,MAAMC,mBAAmB,GAAIC,EAAD,IAAQ,MAAOT,QAAP,IAAoB;AAC7D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,GAAN,CACpB,uCAAsCM,EAAG,EADrB,CAAvB;AAGAT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,wBADC;AAEPO,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH,sBADC;AAEPM,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAnBM","sourcesContent":["import axios from \"axios\";\nimport {\n  CATEGORY_LIST_REQUEST,\n  CATEGORY_LIST_SUCCESS,\n  CATEGORY_LIST_FAILS,\n  CATEGORY_DETAILS_REQUEST,\n  CATEGORY_DETAILS_SUCCESS,\n  CATEGORY_DETAILS_FAILS,\n} from \"../Constant/CategoryConstant\";\n\nexport const listCategories = () => async (dispatch) => {\n  try {\n    dispatch({ type: CATEGORY_LIST_REQUEST });\n    const { data } = await axios.get(\"http://localhost:5000/category/find\");\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_LIST_FAILS,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listCategoryDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: CATEGORY_DETAILS_REQUEST });\n    const { data } = await axios.get(\n      `http://localhost:5000/category/find/${id}`\n    );\n    dispatch({\n      type: CATEGORY_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_DETAILS_FAILS,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}