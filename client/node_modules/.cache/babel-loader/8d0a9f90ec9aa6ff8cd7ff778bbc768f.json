{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport rootReducer from \"./Reducer/Index\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nconst middlewares = [reduxThunk];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middlewares)));\nexport default store;","map":{"version":3,"sources":["/home/master/Documents/herbalFinal/client/src/Redux/store.js"],"names":["createStore","applyMiddleware","reduxThunk","rootReducer","composeWithDevTools","middlewares","userInfoFromStorage","localStorage","getItem","JSON","parse","shippingAddressFromStorage","cartItemsFromStorage","initialState","cart","cartItems","shippingAddress","userLogin","userInfo","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,MAAMC,WAAW,GAAG,CAACH,UAAD,CAApB;AAEA,MAAMI,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,0BAA0B,GAAGJ,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAIA,MAAMI,oBAAoB,GAAGL,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMK,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEH,oBADP;AAEJI,IAAAA,eAAe,EAAEL;AAFb,GADa;AAMnBM,EAAAA,SAAS,EAAE;AAAEC,IAAAA,QAAQ,EAAEZ;AAAZ;AANQ,CAArB;AASA,MAAMa,KAAK,GAAGnB,WAAW,CACvBG,WADuB,EAEvBU,YAFuB,EAGvBT,mBAAmB,CAACH,eAAe,CAAC,GAAGI,WAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAec,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport rootReducer from \"./Reducer/Index\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst middlewares = [reduxThunk];\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}